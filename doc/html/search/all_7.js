var searchData=
[
  ['ga_95',['GA',['../classGA.html',1,'GA'],['../classGA.html#a2a2859549b38e5bb1446d07613718364',1,'GA::GA()']]],
  ['ga_5foptimization_96',['ga_optimization',['../interface_8cpp.html#a6af9ff257918199cc5bab9f42f6e26e6',1,'ga_optimization(REAL_(*func)(REAL_ *, size_t), size_t n_generations, size_t population_size, size_t genome_size, size_t n_offsprings, size_t n_replacements, size_t n_rounds, std::vector&lt; REAL_ &gt; a, std::vector&lt; REAL_ &gt; b, std::string clipping, std::string clipping_fname, std::string selection_method, REAL_ bias, size_t num_parents, size_t lower_bound, size_t k, bool replace, std::string crossover_method, std::string mutation_method, REAL_ mutation_rate, REAL_ mutation_var, REAL_ low_bound, REAL_ up_bound, size_t order, bool is_real, bool is_im_enabled, size_t n_islands, size_t n_immigrants, size_t migration_interval, std::string pickup_method, std::string replace_method, std::string im_graph_fname, std::string experiment_id, std::string log_path, std::string return_type, bool log_fitness, bool log_average_fitness, bool log_bsf, bool log_best_genome):&#160;interface.cpp'],['../gaim_8h.html#a10110592773ea3b121542ee9aa919c33',1,'ga_optimization(REAL_(*func)(REAL_ *, size_t), size_t n_generations, size_t population_size, size_t genome_size, size_t n_offsprings, size_t n_replacements, size_t n_rounds, std::vector&lt; REAL_ &gt; a, std::vector&lt; REAL_ &gt; b, std::string clipping=&quot;universal&quot;, std::string clipping_fname=&quot;clip_file.dat&quot;, std::string selection_method=&quot;ktournament&quot;, REAL_ bias=1.5, size_t num_parents=2, size_t lower_bound=1, size_t k=2, bool replace=false, std::string crossover_method=&quot;one_point&quot;, std::string mutation_method=&quot;delta&quot;, REAL_ mutation_rate=0.5, REAL_ mutation_var=0.5, REAL_ low_bound=0.0, REAL_ up_bound=1.0, size_t order=1, bool is_real=true, bool is_im_enabled=false, size_t n_islands=5, size_t n_immigrants=4, size_t migration_interval=500, std::string pickup_method=&quot;elite&quot;, std::string replace_method=&quot;poor&quot;, std::string im_graph_fname=&quot;star_graph.dat&quot;, std::string experiment_id=&quot;experiment-1&quot;, std::string log_path=&quot;./data/&quot;, std::string return_type=&quot;minimum&quot;, bool log_fitness=false, bool log_average_fitness=true, bool log_bsf=true, bool log_best_genome=true):&#160;interface.cpp']]],
  ['ga_5foptimization_5fpython_97',['ga_optimization_python',['../interface_8cpp.html#ac359b64f4c2d9cedb34e45bfe67dbf12',1,'ga_optimization_python(REAL_(*func)(REAL_ *, size_t), size_t n_generations, size_t population_size, size_t genome_size, size_t n_offsprings, size_t n_replacements, size_t n_rounds, REAL_ *a, REAL_ *b, char *clipping, char *clipping_fname, char *selection_method, REAL_ bias, size_t num_parents, size_t lower_bound, size_t k, bool replace, char *crossover_method, char *mutation_method, REAL_ mutation_rate, REAL_ mutation_var, REAL_ low_bound, REAL_ up_bound, size_t order, bool is_real, bool is_im_enabled, size_t n_islands, size_t n_immigrants, size_t migration_interval, char *pickup_method, char *replace_method, char *im_graph_fname, char *experiment_id, char *log_path, char *return_type, bool log_fitness, bool log_average_fitness, bool log_bsf, bool log_best_genome, REAL_ **genome, REAL_ **bsf, REAL_ **avg_fitness):&#160;interface.cpp'],['../gaim_8h.html#ab93e0b2345540cd32528c0dbed1f2bc1',1,'ga_optimization_python(REAL_(*func)(REAL_ *, size_t), size_t n_generations, size_t population_size, size_t genome_size, size_t n_offsprings, size_t n_replacements, size_t n_rounds, REAL_ *a, REAL_ *b, char *clipping, char *clipping_fname, char *selection_method, REAL_ bias, size_t num_parents, size_t lower_bound, size_t k, bool replace, char *crossover_method, char *mutation_method, REAL_ mutation_rate, REAL_ mutation_var, REAL_ low_bound, REAL_ up_bound, size_t order, bool is_real, bool is_im_enabled, size_t n_islands, size_t n_immigrants, size_t migration_interval, char *pickup_method, char *replace_method, char *im_graph_fname, char *experiment_id, char *log_path, char *return_type, bool log_fitness, bool log_average_fitness, bool log_bsf, bool log_best_genome, REAL_ **genoe, REAL_ **bsf, REAL_ **agv_fitness):&#160;interface.cpp']]],
  ['ga_5foptimize_98',['ga_optimize',['../classpygaim_1_1pygaim_1_1GAOptimize.html#abb2faf45e8c37ab9a3eb192852e2d644',1,'pygaim::pygaim::GAOptimize']]],
  ['ga_5fparameter_5fs_99',['ga_parameter_s',['../gaim_8h.html#a89734bd6529544f0baddd879f565d94b',1,'gaim.h']]],
  ['ga_5fresults_100',['ga_results',['../structga__results.html',1,'']]],
  ['ga_5fresults_5fs_101',['ga_results_s',['../gaim_8h.html#a11121ae153de3c7a9ca2f60e54d50035',1,'gaim.h']]],
  ['gaim_2eh_102',['gaim.h',['../gaim_8h.html',1,'']]],
  ['gaoptimize_103',['GAOptimize',['../classpygaim_1_1pygaim_1_1GAOptimize.html',1,'pygaim::pygaim']]],
  ['generate_104',['generate',['../classpcg__extras_1_1seed__seq__from.html#acd4556759cf92f49bf958e0cacb72e07',1,'pcg_extras::seed_seq_from']]],
  ['generate_5fone_105',['generate_one',['../namespacepcg__extras.html#aa725ad9f9f0b511be8646ffff716665d',1,'pcg_extras']]],
  ['generate_5fto_106',['generate_to',['../namespacepcg__extras.html#a41e1950d9f7429f7e9775c3924a861db',1,'pcg_extras']]],
  ['generate_5fto_5fimpl_107',['generate_to_impl',['../namespacepcg__extras.html#a908d65518153efed3219c2bd26d54789',1,'pcg_extras::generate_to_impl(SeedSeq &amp;&amp;generator, DestIter dest, std::true_type)'],['../namespacepcg__extras.html#a61f43320af045b4a81fd1d47ddb0d9af',1,'pcg_extras::generate_to_impl(SeedSeq &amp;&amp;generator, DestIter dest, std::false_type)']]],
  ['generations_108',['generations',['../structparameter__ga.html#a12329a6d475e02fd715889728e504a27',1,'parameter_ga::generations()'],['../classGA.html#a10b1a92ed188c32de244bac239165861',1,'GA::generations()'],['../classIM.html#aee2c2c334f5e95c2c7c1b8a3db811410',1,'IM::generations()']]],
  ['genetic_5falg_2ecpp_109',['genetic_alg.cpp',['../genetic__alg_8cpp.html',1,'']]],
  ['genome_110',['genome',['../structindividual.html#a7df4ddddf193283b76fd27ee2288c082',1,'individual::genome()'],['../structga__results.html#af2cd03da3df240343280edc15f937dd0',1,'ga_results::genome()'],['../classpygaim_1_1pygaim_1_1GAOptimize.html#a71cade46674b4895c1e09c54ddc9ed30',1,'pygaim.pygaim.GAOptimize.genome()']]],
  ['genome_5fp_111',['genome_p',['../classpygaim_1_1pygaim_1_1GAOptimize.html#a8bf18a40a0fd31bb772bd9f5457a15ec',1,'pygaim::pygaim::GAOptimize']]],
  ['genome_5fsize_112',['genome_size',['../structparameter__ga.html#a0a558f17babc2e8a47b181d7d7b7920d',1,'parameter_ga::genome_size()'],['../classGA.html#a92da617a43ffa69376d3ce6dcfc46f1e',1,'GA::genome_size()'],['../classpygaim_1_1pygaim_1_1GAOptimize.html#a2d16f62e9830f15611d57f83409056e9',1,'pygaim.pygaim.GAOptimize.genome_size()']]],
  ['get_5faverage_5ffitness_113',['get_average_fitness',['../classGA.html#aabec06bace13b2777e72cea3bf19ab93',1,'GA']]],
  ['get_5fbest_5fgenome_114',['get_best_genome',['../classGA.html#a4ec70bd93965a3e104d9dacc4226b06e',1,'GA']]],
  ['get_5fbsf_115',['get_bsf',['../classGA.html#a89800eb2174f0abd287dab5ce9016806',1,'GA']]],
  ['get_5fextended_5fvalue_116',['get_extended_value',['../classpcg__detail_1_1extended.html#a36486b3339ae8242e65ea3218d3e5e26',1,'pcg_detail::extended']]],
  ['griewank_117',['griewank',['../test__functions_8cpp.html#a6d67494cf0767fbd38f7bfa2a6b7f17a',1,'griewank(REAL_ *x, size_t len):&#160;test_functions.cpp'],['../gaim_8h.html#a4ee9ecf0f8b15abe84fe28b658a48fed',1,'griewank(std::vector&lt; REAL_ &gt; &amp;):&#160;gaim.h']]]
];
